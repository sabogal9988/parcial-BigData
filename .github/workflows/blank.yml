name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install python requirements (lambda/requirements.txt)
        run: |
          python -m venv env
          source env/bin/activate
          pip install -r lambda/requirements.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Prepare lambda/zappa_settings.json
        env:
          DATA_BUCKET: ${{ secrets.DATA_BUCKET }}
          MYSQL_HOST:  ${{ secrets.MYSQL_HOST }}
          MYSQL_USER:  ${{ secrets.MYSQL_USER }}
          MYSQL_PASS:  ${{ secrets.MYSQL_PASS }}
          MYSQL_NAME:  ${{ secrets.MYSQL_NAME }}
        run: |
          envsubst < lambda/zappa_settings.template.json > lambda/zappa_settings.json

      - name: Deploy or update zappa  
        run: |
          source env/bin/activate
          if zappa status dev -s lambda/zappa_settings.json; then
            zappa update dev -s lambda/zappa_settings.json
          else
            zappa deploy dev -s lambda/zappa_settings.json
          fi

      - name: Subir rs
        run: |
          source env/bin/activate
          if zappa status dev -s lambda/zappa_settings.json; then
            zappa update dev -s lambda/zappa_settings.json
          else
            zappa deploy dev -s lambda/zappa_settings.json
          fi