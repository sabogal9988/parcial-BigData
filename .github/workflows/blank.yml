name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install python requirements.txt
        run: |
          python -m venv env
          source env/bin/activate
          pip install -r lambda/requirements.txt

      # === NUEVO: ejecutar los tests ===
      - name: Run unit tests
        run: |
          source env/bin/activate
          pytest -q --maxfail=1 --disable-warnings

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Replace env vars in zappa_settings.json
        run: |
          cd lambda/
          sed -i "s|\${MYSQL_HOST}|${{ secrets.MYSQL_HOST }}|g" zappa_settings.json
          sed -i "s|\${MYSQL_USER}|${{ secrets.MYSQL_USER }}|g" zappa_settings.json
          sed -i "s|\${MYSQL_PASS}|${{ secrets.MYSQL_PASS }}|g" zappa_settings.json
          sed -i "s|\${MYSQL_DB}|${{ secrets.MYSQL_DB }}|g" zappa_settings.json

      - name: Deploy or update zappa
        run: |
          source env/bin/activate
          cd lambda/
          if zappa status dev; then
            zappa update dev
          else
            zappa deploy dev
          fi

      - name: Subir rs
        run: |
          source env/bin/activate
          cd lambda/
          if zappa status dev2; then
            zappa update dev2
          else
            zappa deploy dev2
          fi

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/parcial-BigData
            git pull origin main
            source .venv/bin/activate
            pip install -r lambda/requirements.txt
            cat > /home/ubuntu/parcial-BigData/.env <<EOF
            MYSQL_HOST=${{ secrets.MYSQL_HOST }}
            MYSQL_USER=${{ secrets.MYSQL_USER }}
            MYSQL_PASS=${{ secrets.MYSQL_PASS }}
            MYSQL_DB=${{ secrets.MYSQL_DB }}
            EOF
            sudo systemctl restart api
